name: Test PR Build

on:
  workflow_dispatch:
  push:
    branches: 
      - test

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    permissions:
      contents: write
      pages: write
      pull-requests: write
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        
      - name: Make Changes
        env:
          BRANCH_NAME: test_branch_${{ github.run_number }}
        run: |
          git config --global user.name "User-Test1"
          git config --global user.email "tpt@milestone.dk"  
          
          git checkout -b $BRANCH_NAME
          git push -u origin $BRANCH_NAME
          echo "test$(git rev-parse HEAD)" >> test1.txt
          git add test1.txt
          echo "test$(git rev-parse HEAD)" >> test2.txt
          git add test2.txt

      - name: Prepare variable
        env:
          BRANCH_NAME: test_branch_${{ github.run_number }}
        run: |
          echo "COMMAND_VALUE_1=git add ." >> $GITHUB_ENV
          echo "COMMAND_VALUE_2=git diff --staged --name-only > changed_files.txt" >> $GITHUB_ENV
          echo "COMMAND_VALUE_3=echo \"Changed files:\" && cat changed_files.txt" >> $GITHUB_ENV
          echo "COMMAND_VALUE_5= \
          gh api graphql \
            -F githubRepository=\"tpt-milestone/intro-github\" \
            -F branchName=$BRANCH_NAME \
            -F expectedHeadOid=$(git rev-parse HEAD) \
            -F commitMessage=\"Updated some files\" \
            -F files[][path]="test1.txt" -F -files[][contents]="dGVzdDE3M2ZhYTEyNzJiNDc3OTdmZjI0NWZkM2MwZmNiMzRjMzAyOTJkY2MK" -F files[][path]="test2.txt" -F -files[][contents]="dGVzdDE3M2ZhYTEyNzJiNDc3OTdmZjI0NWZkM2MwZmNiMzRjMzAyOTJkY2MK"
            -F 'query=@.github/api/createCommitOnBranch.gql'" >> $GITHUB_ENV
  


          
      - name: Commit Changes
        env:
          BRANCH_NAME: test_branch_${{ github.run_number }}
        run: |
          eval $COMMAND_VALUE_1

          eval $COMMAND_VALUE_2

          eval $COMMAND_VALUE_3

          echo "5"
          ${{ env.COMMAND_VALUE_3 }}

          additions=()
          files=($(cat changed_files.txt))

          echo "Files array:"
          for file in "${files[@]}"; do
            echo "$file"
          done
          
          echo "p1"
          p1="123"
          echo $p1
          p1="${p1}asd"
          echo $p1
          
          echo "p2"
          p2="123"
          echo $p2
          p2="$(echo $p2)asdfg"
          echo $p2
          
          fileParam=""
          for file in "${files[@]}"; do
            content=$(cat "$file" | base64)
            echo "File: $file, Content: $content"
            # fileParam="${fileParam} -F files[][path]=\"$file\" -F -files[][contents]=\"$content\""
          done
          echo "COMMAND_VALUE_5=$COMMAND_VALUE_5 $fileParam" >> $GITHUB_ENV

          additions_json=$(printf '%s\n' "${additions[@]}" | jq -s .)
          echo "Additions JSON:"
          echo "$additions_json"

      - name: Perform Changes
        run: |
          echo "11"
          echo $COMMAND_VALUE_5
          echo "12"
          ${{ env.COMMAND_VALUE_5 }}
